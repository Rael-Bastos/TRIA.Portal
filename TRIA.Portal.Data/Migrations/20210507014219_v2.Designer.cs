// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRIA.Portal.Data.Context;

namespace TRIA.Portal.Data.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20210507014219_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TRIA.Portal.Domain.Entity.ClienteContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente_contato")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_alteracao");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inclusao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_contato");

                    b.Property<string>("HrAtendimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hr_atendimento");

                    b.Property<int>("IdProdutoServico")
                        .HasColumnType("int")
                        .HasColumnName("id_produto_servico");

                    b.Property<string>("NmCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_cliente");

                    b.Property<string>("NmEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_empresa");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone_contato");

                    b.Property<string>("TextoLivre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("texto_livre");

                    b.HasKey("Id");

                    b.HasIndex("IdProdutoServico");

                    b.ToTable("Tbl_Cliente_Contato");
                });

            modelBuilder.Entity("TRIA.Portal.Domain.Entity.ProdutoServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_produto_servico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inclusao");

                    b.Property<string>("NmProdutoServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nm_produto_servico");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Produto_Servico");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DtInclusao = new DateTime(2021, 5, 6, 22, 42, 18, 879, DateTimeKind.Local).AddTicks(5498),
                            NmProdutoServico = "Desenvolvimento de App"
                        },
                        new
                        {
                            Id = 2,
                            DtInclusao = new DateTime(2021, 5, 6, 22, 42, 18, 881, DateTimeKind.Local).AddTicks(1979),
                            NmProdutoServico = "Desenvolvimento Web"
                        },
                        new
                        {
                            Id = 3,
                            DtInclusao = new DateTime(2021, 5, 6, 22, 42, 18, 881, DateTimeKind.Local).AddTicks(2032),
                            NmProdutoServico = "Integração com SAP"
                        },
                        new
                        {
                            Id = 4,
                            DtInclusao = new DateTime(2021, 5, 6, 22, 42, 18, 881, DateTimeKind.Local).AddTicks(2036),
                            NmProdutoServico = "Integração com Mastersaf"
                        },
                        new
                        {
                            Id = 5,
                            DtInclusao = new DateTime(2021, 5, 6, 22, 42, 18, 881, DateTimeKind.Local).AddTicks(2038),
                            NmProdutoServico = "Suporte Nível Especialista"
                        },
                        new
                        {
                            Id = 6,
                            DtInclusao = new DateTime(2021, 5, 6, 22, 42, 18, 881, DateTimeKind.Local).AddTicks(2040),
                            NmProdutoServico = "Solução Tributária"
                        });
                });

            modelBuilder.Entity("TRIA.Portal.Domain.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_inclusao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_completo");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.Property<string>("Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Usuarios");
                });

            modelBuilder.Entity("TRIA.Portal.Domain.Entity.ClienteContato", b =>
                {
                    b.HasOne("TRIA.Portal.Domain.Entity.ProdutoServico", "ProdutoServico")
                        .WithMany("ClienteContatos")
                        .HasForeignKey("IdProdutoServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoServico");
                });

            modelBuilder.Entity("TRIA.Portal.Domain.Entity.ProdutoServico", b =>
                {
                    b.Navigation("ClienteContatos");
                });
#pragma warning restore 612, 618
        }
    }
}
